(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))r(s);new MutationObserver(s=>{for(const i of s)if(i.type==="childList")for(const n of i.addedNodes)n.tagName==="LINK"&&n.rel==="modulepreload"&&r(n)}).observe(document,{childList:!0,subtree:!0});function t(s){const i={};return s.integrity&&(i.integrity=s.integrity),s.referrerPolicy&&(i.referrerPolicy=s.referrerPolicy),s.crossOrigin==="use-credentials"?i.credentials="include":s.crossOrigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function r(s){if(s.ep)return;s.ep=!0;const i=t(s);fetch(s.href,i)}})();class g{rows;cols;empty;grid;constructor(e,t){this.rows=e,this.cols=t,this.empty=0,this.grid=Array.from({length:e},()=>Array(t).fill(this.empty))}isValidMove(e,t,r){for(let s=0;s<e.length;s++)for(let i=0;i<e[0].length;i++)if(e[s][i]){const n=t+s,a=r+i;if(n<0||n>=this.rows||a<0||a>=this.cols||this.grid[n][a]!==this.empty)return!1}return!0}mergePiece(e,t){const r=e.getShape();for(let s=0;s<r.length;s++)for(let i=0;i<r[0].length;i++)r[s][i]&&(this.grid[t.row+s][t.col+i]=1)}clearLines(){let e=0;for(let t=this.rows-1;t>=0;t--)this.grid[t].every(r=>r!==this.empty)&&(this.grid.splice(t,1),this.grid.unshift(Array(this.cols).fill(this.empty)),e++,t++);return e}reset(){this.grid=Array.from({length:this.rows},()=>Array(this.cols).fill(this.empty))}getCell(e,t){return this.grid[e][t]}getGrid(){return this.grid}}class m{score;lines;level;gameOver;isPaused;constructor(){this.score=0,this.lines=0,this.level=1,this.gameOver=!1,this.isPaused=!1}updateScore(e){e>0&&(this.score+=e*100,this.lines+=e,this.level=1+Math.floor(this.lines/10))}reset(){this.score=0,this.lines=0,this.level=1,this.gameOver=!1,this.isPaused=!1}togglePause(){this.isPaused=!this.isPaused}setGameOver(){this.gameOver=!0}getScore(){return this.score}getLines(){return this.lines}getLevel(){return this.level}isGameOver(){return this.gameOver}getIsPaused(){return this.isPaused}}class p{game;touchStartX;touchStartY;SWIPE_THRESHOLD=50;constructor(e){this.game=e,this.touchStartX=null,this.touchStartY=null,this.setupEventListeners()}setupEventListeners(){document.addEventListener("keydown",t=>{if(!this.game.getIsStarted()){this.game.start();return}switch(t.key){case"r":case"R":this.game.restart();return}if(!this.game.getGameState().isGameOver())switch(t.key){case"ArrowLeft":case"7":this.game.move(-1);break;case"ArrowRight":case"9":this.game.move(1);break;case"ArrowUp":case"8":this.game.rotatePiece();break;case"ArrowDown":case"4":this.game.moveDown();break;case" ":case"5":this.game.drop();break;case"p":case"P":this.game.togglePause(),this.updatePauseButtonText();break}});const e=document.getElementById("pause-button");e&&(e.addEventListener("click",()=>this.handleButtonClick()),e.addEventListener("touchend",t=>{t.preventDefault(),this.handleButtonClick()})),document.addEventListener("touchstart",t=>{!this.game.getIsStarted()||this.game.getGameState().isGameOver()||(this.touchStartX=t.touches[0].clientX,this.touchStartY=t.touches[0].clientY)},{passive:!0}),document.addEventListener("touchend",t=>{if(!this.game.getIsStarted()||!this.touchStartX||!this.touchStartY||this.game.getGameState().isGameOver())return;const r=document.getElementById("pause-button"),s=t.changedTouches[0].clientX,i=t.changedTouches[0].clientY;if(r){const h=r.getBoundingClientRect();if(s>=h.left&&s<=h.right&&i>=h.top&&i<=h.bottom){this.touchStartX=null,this.touchStartY=null;return}}const n=s-this.touchStartX,a=i-this.touchStartY;Math.abs(n)<this.SWIPE_THRESHOLD&&Math.abs(a)<this.SWIPE_THRESHOLD?this.game.rotatePiece():Math.abs(n)>Math.abs(a)?n>0?this.game.move(1):this.game.move(-1):a>0?this.game.drop():this.game.moveDown(),this.touchStartX=null,this.touchStartY=null},{passive:!0}),document.addEventListener("touchmove",t=>{!this.game.getIsStarted()||this.game.getGameState().isGameOver()},{passive:!0})}updatePauseButtonText(){const e=document.getElementById("pause-button");e&&(this.game.getGameState().isGameOver()?e.textContent="RESTART":e.textContent=this.game.getGameState().getIsPaused()?"RESUME":"PAUSE")}handleButtonClick(){this.game.getGameState().isGameOver()?this.game.restart():this.game.getIsStarted()&&!this.game.getGameState().isGameOver()&&this.game.togglePause(),this.updatePauseButtonText()}}class d{static PIECES=[{shape:[[1,1],[1,1]]},{shape:[[1,1,1,1]]},{shape:[[1,1,0],[0,1,1]]},{shape:[[1,0],[1,0],[1,1]]},{shape:[[0,1],[0,1],[1,1]]},{shape:[[1,1,1],[0,1,0]]}];shape;constructor(e=null){this.shape=e?JSON.parse(JSON.stringify(e)):this.getRandomPiece().shape}getRandomPiece(){const e=Math.floor(Math.random()*d.PIECES.length);return JSON.parse(JSON.stringify(d.PIECES[e]))}rotate(){this.shape=this.shape[0].map((e,t)=>this.shape.map(r=>r[t]).reverse())}getWidth(){return this.shape[0].length}getHeight(){return this.shape.length}getShape(){return this.shape}}class f{ROWS;COLS;TICK_MS;board;gameState;renderer;inputHandler;current;next;position;isStarted;tickInterval;constructor(e){this.ROWS=25,this.COLS=10,this.TICK_MS=500,this.board=new g(this.ROWS,this.COLS),this.gameState=new m,this.renderer=e,this.inputHandler=new p(this),this.current=null,this.next=null,this.position=null,this.isStarted=!1,this.tickInterval=null}start(){if(!this.isStarted){const e=document.getElementById("start-screen"),t=document.getElementById("tetris-container");e&&t&&(e.style.display="none",t.style.display="flex"),this.isStarted=!0,this.spawnPiece(),this.tickInterval=window.setInterval(()=>this.tick(),this.TICK_MS)}}spawnPiece(){this.current=this.next||new d,this.next=new d,this.position={row:0,col:Math.floor((this.COLS-this.current.getWidth())/2)},this.board.isValidMove(this.current.getShape(),this.position.row,this.position.col)||(this.gameState.setGameOver(),this.inputHandler.updatePauseButtonText())}tick(){if(!(this.gameState.isGameOver()||this.gameState.getIsPaused())){if(this.board.isValidMove(this.current.getShape(),this.position.row+1,this.position.col))this.position.row++;else{this.board.mergePiece(this.current,this.position);const e=[];for(let t=this.ROWS-1;t>=0;t--)this.board.getGrid()[t].every(r=>r!==0)&&e.push(t);if(e.length>0){this.renderer.setLinesToClear(e),this.render(),setTimeout(()=>{const t=this.board.clearLines();this.gameState.updateScore(t),this.renderer.setLinesToClear([]),this.spawnPiece(),this.render()},300);return}else this.spawnPiece()}this.render()}}move(e){this.board.isValidMove(this.current.getShape(),this.position.row,this.position.col+e)&&(this.position.col+=e,this.render())}moveDown(){this.board.isValidMove(this.current.getShape(),this.position.row+1,this.position.col)&&(this.position.row++,this.render())}drop(){for(;this.board.isValidMove(this.current.getShape(),this.position.row+1,this.position.col);)this.position.row++;this.tick()}rotatePiece(){this.current.rotate(),this.board.isValidMove(this.current.getShape(),this.position.row,this.position.col)||(this.current.rotate(),this.current.rotate(),this.current.rotate()),this.render()}togglePause(){this.gameState.togglePause(),this.render()}restart(){this.tickInterval&&window.clearInterval(this.tickInterval),this.gameState.reset(),this.board.reset(),this.current=null,this.next=null,this.position=null,this.spawnPiece(),this.tickInterval=window.setInterval(()=>this.tick(),this.TICK_MS),this.render()}render(){this.renderer.render(this.board,this.current,this.next,this.position,this.gameState)}getIsStarted(){return this.isStarted}getGameState(){return this.gameState}}class S{gameBoard;nextPiece;scoreboard;instructions;gameMessage;linesToClear;constructor(e,t,r,s,i){this.gameBoard=e,this.nextPiece=t,this.scoreboard=r,this.instructions=s,this.gameMessage=i,this.linesToClear=new Set}setLinesToClear(e){this.linesToClear=new Set(e)}render(e,t,r,s,i){this.renderBoard(e,t,s,i),this.renderNext(r),this.renderScore(i),this.renderInstructions(),this.renderGameMessage(i)}renderBoard(e,t,r,s){let i="";for(let n=0;n<e.getGrid().length;n++){i+="<!";for(let a=0;a<e.getGrid()[0].length;a++){let h=e.getCell(n,a)!==0,u=this.linesToClear.has(n);if(!s.isGameOver()&&t)for(let l=0;l<t.getShape().length;l++)for(let c=0;c<t.getShape()[0].length;c++)t.getShape()[l][c]&&n===r.row+l&&a===r.col+c&&(h=!0);if(h)if(u){const l=["█","▓","▒","░"],c=Math.floor(Date.now()/50)%l.length;i+=`[${l[c]}]`}else i+="[ ]";else i+=" . "}i+=`!>
`}i+="<!".padEnd(e.getGrid()[0].length*3+2,"=")+`!>
`,this.gameBoard.textContent=i}renderNext(e){let t=`NEXT:
`;for(let r=0;r<e.getShape().length;r++){for(let s=0;s<e.getShape()[0].length;s++)t+=e.getShape()[r][s]?"[ ]":"   ";t+=`
`}this.nextPiece.textContent=t}renderScore(e){this.scoreboard.textContent=`LINES CLEARED: ${e.getLines()}
LEVEL: ${e.getLevel()}
SCORE: ${e.getScore()}`}renderInstructions(){this.instructions.textContent=`INSTRUCTIONS:
7/←: LEFT   9/→: RIGHT
8/↑: ROTATE
4/↓: SOFT DROP
5/SPACE: HARD DROP
P: PAUSE    R: RESTART`}renderGameMessage(e){let t="";e.isGameOver()?t=`GAME OVER!

Press R to play again`:e.getIsPaused()&&(t="PAUSED"),this.gameMessage.textContent=t}setCustomMessage(e){this.gameMessage.textContent=e}}const v=new S(document.getElementById("game-board"),document.getElementById("next-piece"),document.getElementById("scoreboard"),document.getElementById("instructions"),document.getElementById("game-message")),E=new f(v);window.onload=()=>{const o=document.getElementById("start-screen"),e=document.getElementById("tetris-container");let t=!1;if(document.addEventListener("touchstart",r=>{r.touches.length>1&&r.preventDefault()},{passive:!1}),o&&e){o.style.display="flex",e.style.display="none";const r=s=>{s.preventDefault(),t||(t=!0,o.style.display="none",e.style.display="flex",E.start())};document.body.addEventListener("click",r),document.body.addEventListener("touchend",r)}};
//# sourceMappingURL=index-DIUiK7WJ.js.map
