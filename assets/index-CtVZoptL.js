var f=Object.defineProperty;var m=(o,e,t)=>e in o?f(o,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):o[e]=t;var p=(o,e,t)=>m(o,typeof e!="symbol"?e+"":e,t);(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))r(s);new MutationObserver(s=>{for(const i of s)if(i.type==="childList")for(const n of i.addedNodes)n.tagName==="LINK"&&n.rel==="modulepreload"&&r(n)}).observe(document,{childList:!0,subtree:!0});function t(s){const i={};return s.integrity&&(i.integrity=s.integrity),s.referrerPolicy&&(i.referrerPolicy=s.referrerPolicy),s.crossOrigin==="use-credentials"?i.credentials="include":s.crossOrigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function r(s){if(s.ep)return;s.ep=!0;const i=t(s);fetch(s.href,i)}})();class y{constructor(e,t){this.rows=e,this.cols=t,this.empty=0,this.grid=Array.from({length:e},()=>Array(t).fill(this.empty))}isValidMove(e,t,r){for(let s=0;s<e.length;s++)for(let i=0;i<e[0].length;i++)if(e[s][i]){let n=t+s,h=r+i;if(n<0||n>=this.rows||h<0||h>=this.cols||this.grid[n][h]!==this.empty)return!1}return!0}mergePiece(e,t){for(let r=0;r<e.shape.length;r++)for(let s=0;s<e.shape[0].length;s++)e.shape[r][s]&&(this.grid[t.row+r][t.col+s]=1)}clearLines(){let e=0;for(let t=this.rows-1;t>=0;t--)this.grid[t].every(r=>r!==this.empty)&&(this.grid.splice(t,1),this.grid.unshift(Array(this.cols).fill(this.empty)),e++,t++);return e}reset(){this.grid=Array.from({length:this.rows},()=>Array(this.cols).fill(this.empty))}getCell(e,t){return this.grid[e][t]}}class w{constructor(){this.score=0,this.lines=0,this.level=1,this.gameOver=!1,this.isPaused=!1}updateScore(e){e>0&&(this.score+=e*100,this.lines+=e,this.level=1+Math.floor(this.lines/10))}reset(){this.score=0,this.lines=0,this.level=1,this.gameOver=!1,this.isPaused=!1}togglePause(){this.isPaused=!this.isPaused}setGameOver(){this.gameOver=!0}}class S{constructor(e){this.game=e,this.setupEventListeners()}setupEventListeners(){document.addEventListener("keydown",e=>{if(!this.game.isStarted){this.game.start();return}switch(e.key){case"r":case"R":this.game.restart();return}if(!this.game.gameState.gameOver)switch(e.key){case"ArrowLeft":case"7":this.game.move(-1);break;case"ArrowRight":case"9":this.game.move(1);break;case"ArrowUp":case"8":this.game.rotatePiece();break;case"ArrowDown":case"4":this.game.moveDown();break;case" ":case"5":this.game.drop();break;case"p":case"P":this.game.togglePause();break}})}}const c=class c{constructor(e=null){this.shape=e?JSON.parse(JSON.stringify(e)):this.getRandomPiece().shape}getRandomPiece(){const e=Math.floor(Math.random()*c.PIECES.length);return JSON.parse(JSON.stringify(c.PIECES[e]))}rotate(){this.shape=this.shape[0].map((e,t)=>this.shape.map(r=>r[t]).reverse())}getWidth(){return this.shape[0].length}getHeight(){return this.shape.length}};p(c,"PIECES",[{shape:[[1,1],[1,1]]},{shape:[[1,1,1,1]]},{shape:[[1,1,0],[0,1,1]]},{shape:[[1,0],[1,0],[1,1]]},{shape:[[1,1,1],[0,1,0]]}]);let d=c;class v{constructor(e){this.ROWS=25,this.COLS=10,this.TICK_MS=500,this.board=new y(this.ROWS,this.COLS),this.gameState=new w,this.renderer=e,this.inputHandler=new S(this),this.current=null,this.next=null,this.position=null,this.isStarted=!1,this.tickInterval=null}start(){this.isStarted||(document.getElementById("start-screen").style.display="none",document.getElementById("tetris-container").style.display="flex",this.isStarted=!0,this.spawnPiece(),this.tickInterval=setInterval(()=>this.tick(),this.TICK_MS))}spawnPiece(){this.current=this.next||new d,this.next=new d,this.position={row:0,col:Math.floor((this.COLS-this.current.getWidth())/2)},this.board.isValidMove(this.current.shape,this.position.row,this.position.col)||this.gameState.setGameOver()}tick(){if(!(this.gameState.gameOver||this.gameState.isPaused)){if(this.board.isValidMove(this.current.shape,this.position.row+1,this.position.col))this.position.row++;else{this.board.mergePiece(this.current,this.position);const e=[];for(let t=this.ROWS-1;t>=0;t--)this.board.grid[t].every(r=>r!==this.board.empty)&&e.push(t);if(e.length>0){this.renderer.setLinesToClear(e),this.render(),setTimeout(()=>{const t=this.board.clearLines();this.gameState.updateScore(t),this.renderer.setLinesToClear([]),this.spawnPiece(),this.render()},300);return}else this.spawnPiece()}this.render()}}move(e){this.board.isValidMove(this.current.shape,this.position.row,this.position.col+e)&&(this.position.col+=e,this.render())}moveDown(){this.board.isValidMove(this.current.shape,this.position.row+1,this.position.col)&&(this.position.row++,this.render())}drop(){for(;this.board.isValidMove(this.current.shape,this.position.row+1,this.position.col);)this.position.row++;this.tick()}rotatePiece(){this.current.rotate(),this.board.isValidMove(this.current.shape,this.position.row,this.position.col)||(this.current.rotate(),this.current.rotate(),this.current.rotate()),this.render()}togglePause(){this.gameState.togglePause(),this.render()}restart(){this.tickInterval&&clearInterval(this.tickInterval),this.gameState.reset(),this.board.reset(),this.current=null,this.next=null,this.position=null,this.spawnPiece(),this.tickInterval=setInterval(()=>this.tick(),this.TICK_MS),this.render()}render(){this.renderer.render(this.board,this.current,this.next,this.position,this.gameState)}}class P{constructor(e,t,r,s){this.gameBoard=e,this.nextPiece=t,this.scoreboard=r,this.instructions=s,this.linesToClear=new Set}setLinesToClear(e){this.linesToClear=new Set(e)}render(e,t,r,s,i){this.renderBoard(e,t,s,i),this.renderNext(r),this.renderScore(i),this.renderInstructions()}renderBoard(e,t,r,s){let i="";for(let n=0;n<e.rows;n++){i+="<!";for(let h=0;h<e.cols;h++){let u=e.getCell(n,h)!==e.empty,g=this.linesToClear.has(n);if(!s.gameOver&&t)for(let a=0;a<t.shape.length;a++)for(let l=0;l<t.shape[0].length;l++)t.shape[a][l]&&n===r.row+a&&h===r.col+l&&(u=!0);if(u)if(g){const a=["█","▓","▒","░"],l=Math.floor(Date.now()/50)%a.length;i+=`[${a[l]}]`}else i+="[ ]";else i+=" . "}i+=`!>
`}i+="<!".padEnd(e.cols*3+2,"=")+`!>
`,s.gameOver?i+=`
GAME OVER!
Press R to play again`:s.isPaused&&(i+=`
PAUSED`),this.gameBoard.textContent=i}renderNext(e){let t=`NEXT:
`;for(let r=0;r<e.shape.length;r++){for(let s=0;s<e.shape[0].length;s++)t+=e.shape[r][s]?"[ ]":"   ";t+=`
`}this.nextPiece.textContent=t}renderScore(e){this.scoreboard.textContent=`LINES CLEARED: ${e.lines}
LEVEL: ${e.level}
SCORE: ${e.score}`}renderInstructions(){this.instructions.textContent=`INSTURCTIONS:
7/←: LEFT   9/→: RIGHT
8/↑: ROTATE
4/↓: SOFT DROP
5/SPACE: HARD DROP
P: PAUSE    R: RESTART`}}const E=new P(document.getElementById("game-board"),document.getElementById("next-piece"),document.getElementById("scoreboard"),document.getElementById("instructions"));new v(E);window.onload=()=>{document.getElementById("start-screen").style.display="flex",document.getElementById("tetris-container").style.display="none"};
