var p=Object.defineProperty;var f=(o,t,e)=>t in o?p(o,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):o[t]=e;var n=(o,t,e)=>f(o,typeof t!="symbol"?t+"":t,e);(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))r(s);new MutationObserver(s=>{for(const i of s)if(i.type==="childList")for(const a of i.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&r(a)}).observe(document,{childList:!0,subtree:!0});function e(s){const i={};return s.integrity&&(i.integrity=s.integrity),s.referrerPolicy&&(i.referrerPolicy=s.referrerPolicy),s.crossOrigin==="use-credentials"?i.credentials="include":s.crossOrigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function r(s){if(s.ep)return;s.ep=!0;const i=e(s);fetch(s.href,i)}})();class S{constructor(t,e){n(this,"rows");n(this,"cols");n(this,"empty");n(this,"grid");this.rows=t,this.cols=e,this.empty=0,this.grid=Array.from({length:t},()=>Array(e).fill(this.empty))}isValidMove(t,e,r){for(let s=0;s<t.length;s++)for(let i=0;i<t[0].length;i++)if(t[s][i]){const a=e+s,h=r+i;if(a<0||a>=this.rows||h<0||h>=this.cols||this.grid[a][h]!==this.empty)return!1}return!0}mergePiece(t,e){const r=t.getShape();for(let s=0;s<r.length;s++)for(let i=0;i<r[0].length;i++)r[s][i]&&(this.grid[e.row+s][e.col+i]=1)}clearLines(){let t=0;for(let e=this.rows-1;e>=0;e--)this.grid[e].every(r=>r!==this.empty)&&(this.grid.splice(e,1),this.grid.unshift(Array(this.cols).fill(this.empty)),t++,e++);return t}reset(){this.grid=Array.from({length:this.rows},()=>Array(this.cols).fill(this.empty))}getCell(t,e){return this.grid[t][e]}getGrid(){return this.grid}}class v{constructor(){n(this,"score");n(this,"lines");n(this,"level");n(this,"gameOver");n(this,"isPaused");this.score=0,this.lines=0,this.level=1,this.gameOver=!1,this.isPaused=!1}updateScore(t){t>0&&(this.score+=t*100,this.lines+=t,this.level=1+Math.floor(this.lines/10))}reset(){this.score=0,this.lines=0,this.level=1,this.gameOver=!1,this.isPaused=!1}togglePause(){this.isPaused=!this.isPaused}setGameOver(){this.gameOver=!0}getScore(){return this.score}getLines(){return this.lines}getLevel(){return this.level}isGameOver(){return this.gameOver}getIsPaused(){return this.isPaused}}class E{constructor(t){n(this,"game");n(this,"touchStartX");n(this,"touchStartY");n(this,"SWIPE_THRESHOLD",50);this.game=t,this.touchStartX=null,this.touchStartY=null,this.setupEventListeners()}setupEventListeners(){document.addEventListener("keydown",e=>{if(!this.game.getIsStarted()){this.game.start();return}switch(e.key){case"r":case"R":this.game.restart();return}if(!this.game.getGameState().isGameOver())switch(e.key){case"ArrowLeft":case"7":this.game.move(-1);break;case"ArrowRight":case"9":this.game.move(1);break;case"ArrowUp":case"8":this.game.rotatePiece();break;case"ArrowDown":case"4":this.game.moveDown();break;case" ":case"5":this.game.drop();break;case"p":case"P":this.game.togglePause(),this.updatePauseButtonText();break}});const t=document.getElementById("pause-button");if(t){const e=()=>{this.game.getIsStarted()&&!this.game.getGameState().isGameOver()&&(this.game.togglePause(),this.updatePauseButtonText())};t.addEventListener("click",e),t.addEventListener("touchend",r=>{r.preventDefault(),e()})}document.addEventListener("touchstart",e=>{!this.game.getIsStarted()||this.game.getGameState().isGameOver()||(this.touchStartX=e.touches[0].clientX,this.touchStartY=e.touches[0].clientY)},{passive:!0}),document.addEventListener("touchend",e=>{if(!this.game.getIsStarted()||!this.touchStartX||!this.touchStartY||this.game.getGameState().isGameOver())return;const r=document.getElementById("pause-button"),s=e.changedTouches[0].clientX,i=e.changedTouches[0].clientY;if(r){const l=r.getBoundingClientRect();if(s>=l.left&&s<=l.right&&i>=l.top&&i<=l.bottom){this.touchStartX=null,this.touchStartY=null;return}}const a=s-this.touchStartX,h=i-this.touchStartY;Math.abs(a)<this.SWIPE_THRESHOLD&&Math.abs(h)<this.SWIPE_THRESHOLD?this.game.rotatePiece():Math.abs(a)>Math.abs(h)?a>0?this.game.move(1):this.game.move(-1):h>0?this.game.drop():this.game.moveDown(),this.touchStartX=null,this.touchStartY=null},{passive:!0}),document.addEventListener("touchmove",e=>{!this.game.getIsStarted()||this.game.getGameState().isGameOver()},{passive:!0})}updatePauseButtonText(){const t=document.getElementById("pause-button");t&&(t.textContent=this.game.getGameState().getIsPaused()?"RESUME":"PAUSE")}}const u=class u{constructor(t=null){n(this,"shape");this.shape=t?JSON.parse(JSON.stringify(t)):this.getRandomPiece().shape}getRandomPiece(){const t=Math.floor(Math.random()*u.PIECES.length);return JSON.parse(JSON.stringify(u.PIECES[t]))}rotate(){this.shape=this.shape[0].map((t,e)=>this.shape.map(r=>r[e]).reverse())}getWidth(){return this.shape[0].length}getHeight(){return this.shape.length}getShape(){return this.shape}};n(u,"PIECES",[{shape:[[1,1],[1,1]]},{shape:[[1,1,1,1]]},{shape:[[1,1,0],[0,1,1]]},{shape:[[1,0],[1,0],[1,1]]},{shape:[[1,1,1],[0,1,0]]}]);let g=u;class y{constructor(t){n(this,"ROWS");n(this,"COLS");n(this,"TICK_MS");n(this,"board");n(this,"gameState");n(this,"renderer");n(this,"inputHandler");n(this,"current");n(this,"next");n(this,"position");n(this,"isStarted");n(this,"tickInterval");this.ROWS=25,this.COLS=10,this.TICK_MS=500,this.board=new S(this.ROWS,this.COLS),this.gameState=new v,this.renderer=t,this.inputHandler=new E(this),this.current=null,this.next=null,this.position=null,this.isStarted=!1,this.tickInterval=null}start(){if(!this.isStarted){const t=document.getElementById("start-screen"),e=document.getElementById("tetris-container");t&&e&&(t.style.display="none",e.style.display="flex"),this.isStarted=!0,this.spawnPiece(),this.tickInterval=window.setInterval(()=>this.tick(),this.TICK_MS)}}spawnPiece(){this.current=this.next||new g,this.next=new g,this.position={row:0,col:Math.floor((this.COLS-this.current.getWidth())/2)},this.board.isValidMove(this.current.getShape(),this.position.row,this.position.col)||this.gameState.setGameOver()}tick(){if(!(this.gameState.isGameOver()||this.gameState.getIsPaused())){if(this.board.isValidMove(this.current.getShape(),this.position.row+1,this.position.col))this.position.row++;else{this.board.mergePiece(this.current,this.position);const t=[];for(let e=this.ROWS-1;e>=0;e--)this.board.getGrid()[e].every(r=>r!==0)&&t.push(e);if(t.length>0){this.renderer.setLinesToClear(t),this.render(),setTimeout(()=>{const e=this.board.clearLines();this.gameState.updateScore(e),this.renderer.setLinesToClear([]),this.spawnPiece(),this.render()},300);return}else this.spawnPiece()}this.render()}}move(t){this.board.isValidMove(this.current.getShape(),this.position.row,this.position.col+t)&&(this.position.col+=t,this.render())}moveDown(){this.board.isValidMove(this.current.getShape(),this.position.row+1,this.position.col)&&(this.position.row++,this.render())}drop(){for(;this.board.isValidMove(this.current.getShape(),this.position.row+1,this.position.col);)this.position.row++;this.tick()}rotatePiece(){this.current.rotate(),this.board.isValidMove(this.current.getShape(),this.position.row,this.position.col)||(this.current.rotate(),this.current.rotate(),this.current.rotate()),this.render()}togglePause(){this.gameState.togglePause(),this.render()}restart(){this.tickInterval&&window.clearInterval(this.tickInterval),this.gameState.reset(),this.board.reset(),this.current=null,this.next=null,this.position=null,this.spawnPiece(),this.tickInterval=window.setInterval(()=>this.tick(),this.TICK_MS),this.render()}render(){this.renderer.render(this.board,this.current,this.next,this.position,this.gameState)}getIsStarted(){return this.isStarted}getGameState(){return this.gameState}}class w{constructor(t,e,r,s){n(this,"gameBoard");n(this,"nextPiece");n(this,"scoreboard");n(this,"instructions");n(this,"linesToClear");this.gameBoard=t,this.nextPiece=e,this.scoreboard=r,this.instructions=s,this.linesToClear=new Set}setLinesToClear(t){this.linesToClear=new Set(t)}render(t,e,r,s,i){this.renderBoard(t,e,s,i),this.renderNext(r),this.renderScore(i),this.renderInstructions()}renderBoard(t,e,r,s){let i="";for(let a=0;a<t.getGrid().length;a++){i+="<!";for(let h=0;h<t.getGrid()[0].length;h++){let l=t.getCell(a,h)!==0,m=this.linesToClear.has(a);if(!s.isGameOver()&&e)for(let c=0;c<e.getShape().length;c++)for(let d=0;d<e.getShape()[0].length;d++)e.getShape()[c][d]&&a===r.row+c&&h===r.col+d&&(l=!0);if(l)if(m){const c=["█","▓","▒","░"],d=Math.floor(Date.now()/50)%c.length;i+=`[${c[d]}]`}else i+="[ ]";else i+=" . "}i+=`!>
`}i+="<!".padEnd(t.getGrid()[0].length*3+2,"=")+`!>
`,s.isGameOver()?i+=`
GAME OVER!
Press R to play again`:s.getIsPaused()&&(i+=`
PAUSED`),this.gameBoard.textContent=i}renderNext(t){let e=`NEXT:
`;for(let r=0;r<t.getShape().length;r++){for(let s=0;s<t.getShape()[0].length;s++)e+=t.getShape()[r][s]?"[ ]":"   ";e+=`
`}this.nextPiece.textContent=e}renderScore(t){this.scoreboard.textContent=`LINES CLEARED: ${t.getLines()}
LEVEL: ${t.getLevel()}
SCORE: ${t.getScore()}`}renderInstructions(){this.instructions.textContent=`INSTRUCTIONS:
7/←: LEFT   9/→: RIGHT
8/↑: ROTATE
4/↓: SOFT DROP
5/SPACE: HARD DROP
P: PAUSE    R: RESTART`}}const P=new w(document.getElementById("game-board"),document.getElementById("next-piece"),document.getElementById("scoreboard"),document.getElementById("instructions")),I=new y(P);window.onload=()=>{const o=document.getElementById("start-screen"),t=document.getElementById("tetris-container");let e=!1;if(document.addEventListener("touchstart",r=>{r.touches.length>1&&r.preventDefault()},{passive:!1}),o&&t){o.style.display="flex",t.style.display="none";const r=s=>{s.preventDefault(),e||(e=!0,o.style.display="none",t.style.display="flex",I.start())};document.body.addEventListener("click",r),document.body.addEventListener("touchend",r)}};
//# sourceMappingURL=index-DB_4AV3D.js.map
