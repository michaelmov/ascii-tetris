var f=Object.defineProperty;var y=(o,t,e)=>t in o?f(o,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):o[t]=e;var p=(o,t,e)=>y(o,typeof t!="symbol"?t+"":t,e);(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))r(s);new MutationObserver(s=>{for(const i of s)if(i.type==="childList")for(const n of i.addedNodes)n.tagName==="LINK"&&n.rel==="modulepreload"&&r(n)}).observe(document,{childList:!0,subtree:!0});function e(s){const i={};return s.integrity&&(i.integrity=s.integrity),s.referrerPolicy&&(i.referrerPolicy=s.referrerPolicy),s.crossOrigin==="use-credentials"?i.credentials="include":s.crossOrigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function r(s){if(s.ep)return;s.ep=!0;const i=e(s);fetch(s.href,i)}})();class w{constructor(t,e){this.rows=t,this.cols=e,this.empty=0,this.grid=Array.from({length:t},()=>Array(e).fill(this.empty))}isValidMove(t,e,r){for(let s=0;s<t.length;s++)for(let i=0;i<t[0].length;i++)if(t[s][i]){let n=e+s,a=r+i;if(n<0||n>=this.rows||a<0||a>=this.cols||this.grid[n][a]!==this.empty)return!1}return!0}mergePiece(t,e){for(let r=0;r<t.shape.length;r++)for(let s=0;s<t.shape[0].length;s++)t.shape[r][s]&&(this.grid[e.row+r][e.col+s]=1)}clearLines(){let t=0;for(let e=this.rows-1;e>=0;e--)this.grid[e].every(r=>r!==this.empty)&&(this.grid.splice(e,1),this.grid.unshift(Array(this.cols).fill(this.empty)),t++,e++);return t}reset(){this.grid=Array.from({length:this.rows},()=>Array(this.cols).fill(this.empty))}getCell(t,e){return this.grid[t][e]}}class v{constructor(){this.score=0,this.lines=0,this.level=1,this.gameOver=!1,this.isPaused=!1}updateScore(t){t>0&&(this.score+=t*100,this.lines+=t,this.level=1+Math.floor(this.lines/10))}reset(){this.score=0,this.lines=0,this.level=1,this.gameOver=!1,this.isPaused=!1}togglePause(){this.isPaused=!this.isPaused}setGameOver(){this.gameOver=!0}}class S{constructor(t){this.game=t,this.setupEventListeners()}setupEventListeners(){document.addEventListener("keydown",t=>{if(!this.game.isStarted){this.game.start();return}switch(t.key){case"r":case"R":this.game.restart();return}if(!this.game.gameState.gameOver)switch(t.key){case"ArrowLeft":case"7":this.game.move(-1);break;case"ArrowRight":case"9":this.game.move(1);break;case"ArrowUp":case"8":this.game.rotatePiece();break;case"ArrowDown":case"4":this.game.moveDown();break;case" ":case"5":this.game.drop();break;case"p":case"P":this.game.togglePause();break}})}}const c=class c{constructor(t=null){this.shape=t?JSON.parse(JSON.stringify(t)):this.getRandomPiece().shape}getRandomPiece(){const t=Math.floor(Math.random()*c.PIECES.length);return JSON.parse(JSON.stringify(c.PIECES[t]))}rotate(){this.shape=this.shape[0].map((t,e)=>this.shape.map(r=>r[e]).reverse())}getWidth(){return this.shape[0].length}getHeight(){return this.shape.length}};p(c,"PIECES",[{shape:[[1,1],[1,1]]},{shape:[[1,1,1,1]]},{shape:[[1,1,0],[0,1,1]]},{shape:[[1,0],[1,0],[1,1]]},{shape:[[1,1,1],[0,1,0]]}]);let u=c;class P{constructor(t){this.ROWS=25,this.COLS=10,this.TICK_MS=500,this.board=new w(this.ROWS,this.COLS),this.gameState=new v,this.renderer=t,this.inputHandler=new S(this),this.current=null,this.next=null,this.position=null,this.isStarted=!1,this.tickInterval=null}start(){this.isStarted||(document.getElementById("start-screen").style.display="none",document.getElementById("tetris-container").style.display="flex",this.isStarted=!0,this.spawnPiece(),this.tickInterval=setInterval(()=>this.tick(),this.TICK_MS))}spawnPiece(){this.current=this.next||new u,this.next=new u,this.position={row:0,col:Math.floor((this.COLS-this.current.getWidth())/2)},this.board.isValidMove(this.current.shape,this.position.row,this.position.col)||this.gameState.setGameOver()}tick(){if(!(this.gameState.gameOver||this.gameState.isPaused)){if(this.board.isValidMove(this.current.shape,this.position.row+1,this.position.col))this.position.row++;else{this.board.mergePiece(this.current,this.position);const t=[];for(let e=this.ROWS-1;e>=0;e--)this.board.grid[e].every(r=>r!==this.board.empty)&&t.push(e);if(t.length>0){this.renderer.setLinesToClear(t),this.render(),setTimeout(()=>{const e=this.board.clearLines();this.gameState.updateScore(e),this.renderer.setLinesToClear([]),this.spawnPiece(),this.render()},500);return}else this.spawnPiece()}this.render()}}move(t){this.board.isValidMove(this.current.shape,this.position.row,this.position.col+t)&&(this.position.col+=t,this.render())}moveDown(){this.board.isValidMove(this.current.shape,this.position.row+1,this.position.col)&&(this.position.row++,this.render())}drop(){for(;this.board.isValidMove(this.current.shape,this.position.row+1,this.position.col);)this.position.row++;this.tick()}rotatePiece(){this.current.rotate(),this.board.isValidMove(this.current.shape,this.position.row,this.position.col)||(this.current.rotate(),this.current.rotate(),this.current.rotate()),this.render()}togglePause(){this.gameState.togglePause(),this.render()}restart(){this.tickInterval&&clearInterval(this.tickInterval),this.gameState.reset(),this.board.reset(),this.current=null,this.next=null,this.position=null,this.spawnPiece(),this.tickInterval=setInterval(()=>this.tick(),this.TICK_MS),this.render()}render(){this.renderer.render(this.board,this.current,this.next,this.position,this.gameState)}}class I{constructor(t,e,r,s){this.gameBoard=t,this.nextPiece=e,this.scoreboard=r,this.instructions=s,this.linesToClear=new Set,this.animationFrameId=null}setLinesToClear(t){this.linesToClear=new Set(t),t.length>0?this.startAnimation():this.stopAnimation()}startAnimation(){if(this.animationFrameId)return;const t=()=>{this.renderBoard(this.currentBoard,this.currentPiece,this.currentPosition,this.currentGameState),this.animationFrameId=requestAnimationFrame(t)};this.animationFrameId=requestAnimationFrame(t)}stopAnimation(){this.animationFrameId&&(cancelAnimationFrame(this.animationFrameId),this.animationFrameId=null)}render(t,e,r,s,i){this.currentBoard=t,this.currentPiece=e,this.currentPosition=s,this.currentGameState=i,this.renderBoard(t,e,s,i),this.renderNext(r),this.renderScore(i),this.renderInstructions()}renderBoard(t,e,r,s){let i="";for(let n=0;n<t.rows;n++){i+="<!";for(let a=0;a<t.cols;a++){let d=t.getCell(n,a)!==t.empty;if(!s.gameOver&&e)for(let l=0;l<e.shape.length;l++)for(let h=0;h<e.shape[0].length;h++)e.shape[l][h]&&n===r.row+l&&a===r.col+h&&(d=!0);i+=d?"[ ]":" . "}i+=`!>
`}if(i+="<!".padEnd(t.cols*3+2,"=")+`!>
`,s.gameOver?i+=`
GAME OVER!
Press R to play again`:s.isPaused&&(i+=`
PAUSED`),this.gameBoard.textContent=i,this.linesToClear.size>0){const n=this.gameBoard.textContent.split(`
`),a=["█ █","▓ ▓","▒ ▒","░ ░"],d=Math.floor(Date.now()/50)%a.length;this.linesToClear.forEach(l=>{const h=l+1;if(h>=0&&h<n.length-2){const m=n[h];if(m){const g=m.replace(/\[ \]/g,a[d]);n[h]=g}}}),this.gameBoard.textContent=n.join(`
`)}}renderNext(t){let e=`Next:
`;for(let r=0;r<t.shape.length;r++){for(let s=0;s<t.shape[0].length;s++)e+=t.shape[r][s]?"[ ]":"   ";e+=`
`}this.nextPiece.textContent=e}renderScore(t){this.scoreboard.textContent=`LINES CLEARED: ${t.lines}
LEVEL: ${t.level}
SCORE: ${t.score}`}renderInstructions(){this.instructions.textContent=`7/←: LEFT   9/→: RIGHT
8/↑: ROTATE
4/↓: SOFT DROP  5/SPACE: HARD DROP
P: PAUSE    R: RESTART`}}const E=new I(document.getElementById("game-board"),document.getElementById("next-piece"),document.getElementById("scoreboard"),document.getElementById("instructions"));new P(E);window.onload=()=>{document.getElementById("start-screen").style.display="flex",document.getElementById("tetris-container").style.display="none"};
